Binary files a/dwm and b/dwm differ
diff -ur a/dwm.c b/dwm.c
--- a/dwm.c	2020-04-01 21:14:46.916445185 +0200
+++ b/dwm.c	2020-04-03 15:58:41.519211308 +0200
@@ -84,7 +84,8 @@
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
 enum { SchemeNorm, SchemeSel, SchemeWarn, SchemeUrgent,
-			 SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, SchemeInfoNorm };
+			 SchemeStatus, SchemeTagsSel, SchemeTagsNorm, SchemeInfoSel, SchemeInfoNorm,
+			 SchemeColor0, SchemeColor1, SchemeColor2, SchemeColor3, SchemeColor4, SchemeColor5 };
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
@@ -790,13 +791,40 @@
 	int boxs = drw->fonts->h / 9;
 	int boxw = drw->fonts->h / 6 + 2;
 	unsigned int i, occ = 0, urg = 0;
+	char *ts = stext;
+	char *tp = stext;
+  int tsw, tpw, tx = 0;
 	Client *c;
 
 	/* draw status first so it can be overdrawn by tags later */
 	if (m == selmon) { /* status is only drawn on selected monitor */
 		drw_setscheme(drw, scheme[SchemeStatus]);
-		sw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
-		drw_text(drw, m->ww - sw, 0, sw, bh, 0, stext, 0);
+		int counter=0;
+		char tmp[3];
+		while (*(tp+2) != '\0') {
+			if (*tp == 91 && *(tp+2) == 93) {
+				tmp[0]=*tp;
+				tmp[1]=*(tp+1);
+				tmp[2]=*(tp+2);
+				counter += TEXTW(tmp) - lrpad;
+			}
+			tp++;
+		}
+		sw = TEXTW(stext) - lrpad + 2 - counter;
+		tp = ts;
+		while (*(tp+2) != '\0') {
+			if (*tp == 91 && (unsigned int)*(tp+1) < (LENGTH(colors)+49) && *(tp+2) == 93) {
+				drw_text(drw, m->ww - sw + tx, 0, sw - tx, bh, 0, ts, 0);
+				drw_setscheme(drw, scheme[(unsigned int) *(tp+1)-49]);
+				tpw = TEXTW(tp) - lrpad; 
+				tsw = TEXTW(ts) - lrpad; 
+				tx += tsw - tpw;
+				ts = tp+3;
+				tp = tp+2;
+			}
+			tp++;
+		}
+		drw_text(drw, m->ww - sw + tx, 0, sw - tx, bh, 0, ts, 0);
 	}
 
 	for (c = m->clients; c; c = c->next) {
@@ -1118,6 +1146,20 @@
         XRDB_LOAD_COLOR("dwm.selbordercolor", selbordercolor);
         XRDB_LOAD_COLOR("dwm.selbgcolor", selbgcolor);
         XRDB_LOAD_COLOR("dwm.selfgcolor", selfgcolor);
+
+        XRDB_LOAD_COLOR("dwm.color0bg", color0bg);
+        XRDB_LOAD_COLOR("dwm.color1bg", color1bg);
+        XRDB_LOAD_COLOR("dwm.color2bg", color2bg);
+        XRDB_LOAD_COLOR("dwm.color3bg", color3bg);
+        XRDB_LOAD_COLOR("dwm.color4bg", color4bg);
+        XRDB_LOAD_COLOR("dwm.color5bg", color5bg);
+
+        XRDB_LOAD_COLOR("dwm.color0fg", color0fg);
+        XRDB_LOAD_COLOR("dwm.color1fg", color1fg);
+        XRDB_LOAD_COLOR("dwm.color2fg", color2fg);
+        XRDB_LOAD_COLOR("dwm.color3fg", color3fg);
+        XRDB_LOAD_COLOR("dwm.color4fg", color4fg);
+        XRDB_LOAD_COLOR("dwm.color5fg", color5fg);
       }
     }
   }
Binary files a/dwm.o and b/dwm.o differ
